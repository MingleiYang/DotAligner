PTDOTALIGNER=/home/stesee/DotAligner/analysis/parametertuning

#generate pp files
mkdir ${PTDOTALIGNER}/data/rfam_pairwise_threesomes
./getPP4RNA.sh ${PTDOTALIGNER}/rfam_pairwise_threesomes.fasta

#get 192 job commands
./runDotAligner4Tuning.sh > testit.sh
split -l 1512 -a 3 -d testit.sh ${PTDOTALIGNER}/jobs/dotaligner4tuning
rm testit.sh
for i in `perl -e '{for(my $i=191; $i>=0; $i--){printf("%03i ",$i)}}'`; do cat jobs/dotaligner4tuning${i} | awk -v i=$i '{gsub("dotaligner.out","dotaligner"i".out"); print $0}' > tmp.out; mv tmp.out jobs/dotaligner4tuning${i}; j=`echo "" | awk -v i=$i '{print i+1}'`; mv jobs/dotaligner4tuning${i} jobs/dotaligner4tuning_${j}; done
chmod 744 jobs/dotaligner4tuning*
#submit jobs
qsub -q all.q -N da4tun -t 1-192 job_launch_dotaligner.sge
for i in `perl -e '{for(my $i=191; $i>=0; $i--){printf("%03i ",$i)}}'`; do wc -l dotaligner${i}.out; done

#merge results
for i in `perl -e '{for(my $i=0; $i<=191; $i++){printf("%03i ",$i)}}'`; do cat dotaligner${i}.out | gzip >> ${PTDOTALIGNER}/output/dotaligner4tuning.out.gz; done
gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.gz | awk 'BEGIN{OFS=","}{ if($1=="PARAMETER"){ seq=""; split($2,x,"/");f1=x[length(x)];if(gsub("_","_",x[length(x)])==3){split(x[length(x)],y,"_");sub(".pp","",y[4]);pid=y[4]}; split($3,x,"/");f2=x[length(x)];if(gsub("_","_",x[length(x)])==3){split(x[length(x)],y,"_");sub(".pp","",y[4]);pid=y[4]}; k=$5; a=$7; b=$9; r=$11; t=$13; l=$15; s=$17; m=$19; seqaln=$21 }else{ if($1=="Similarity"){ sub(/,$/,"",$3);sim=$3 }else{ if($1~/^[AUGC-]/){ seq=seq","$1 }else{ if($1=="user"){ split($2,c,"m");sub("s","",c[2]);time=60*c[1]+c[2] }else{ if($1=="sys"){ sub(/^,/,"",seq); print f1,f2,pid,k,a,b,r,t,l,s,m,seqaln,sim,seq,time }}}}} }' | gzip > ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz

#calculate SPS (sum-of-pairs score)
for i in `perl -e 'for($i=6; $i<=252; $i+=6){print $i." "}'`; do
  head -${i} ${PTDOTALIGNER}/rfam_pairwise_threesomes.fasta | tail -6 | awk '{if(NR==1 || NR==2 || NR==4 || NR==5){print $0}else{gsub(/</,"(");gsub(/>/,")");print ">structure\n"$0}}' > tmp.rfam_pairwise_threesomes.fasta;
  FNAME=`awk 'BEGIN{idx=1}/^>/{sub(/^>/,"");fname[idx]=$1;idx++}END{print fname[1]"__"fname[3]}' tmp.rfam_pairwise_threesomes.fasta`
  removeGapsInFasta.pl tmp.rfam_pairwise_threesomes.fasta > rdraw some beautiful graphs
ef_${fname}.fa;
  awk 'nr==1 || nr==2 || nr==5 || nr==6{print $0}' ref_${fname}.fa > ref_${fname}.fasta;
done
rm -f tmp.sps.txt
gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz | sed 's/\.pp//g' | while read line; do
  rfam1=${line%%,*};
  temp=${line#*,};
  rfam2=${temp%%,*};
  echo $line | awk -f "," '{gsub("-",".",$14);gsub("-",".",$15);print ">"$1"\n"$14"\n>"$2"\n"$15}' > test_aln.fa
  getsps.pl ref_${rfam1}__${rfam2}.fasta test_aln.fa >> tmp.sps.txt
done
paste <(gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz) tmp.sps.txt | awk '{print $1","$4}' | gzip > tmp.dotaligner4tuning.csv.gz
mv tmp.dotaligner4tuning.csv.gz ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz

#calculate sci (structure conservation index) based on free energy of the thermodynamic ensemble 
#using rnaalifold for pairwise alignment and rnafold for single sequences
for i in ${ptdotaligner}/data/rfam_pairwise_threesomes/*.fasta; do
  rnafold -p2 < $i 2> /dev/null | sed -n 4p | awk -v id=$i '{sub(/\[/,"",$nf);sub(/\]/,"",$nf); print id,$nf}' >> ${ptdotaligner}/data/rfam_pairwise_threesomes/rfam_pairwise_threesomes.energyensemble;
done
rm -f tmp.sci.txt
data=${ptdotaligner}/data/rfam_pairwise_threesomes
gunzip -c ${ptdotaligner}/output/dotaligner4tuning.out.csv.gz | sed 's/\.pp//g' | while read line; do
  rfam1=${line%%,*};
  temp=${line#*,};
  rfam2=${temp%%,*};
  echo $line | awk -f "," '{gsub("-",".",$14);gsub("-",".",$15);print ">"$1"\n"$14"\n>"$2"\n"$15}' | fa2aln.pl - > test_aln.aln
  alienergyensemble=`rnaalifold -p2 -r < test_aln.aln 2> /dev/null | sed -n 3p | awk '{sub(/\[/,"",$nf);sub(/\]/,"",$nf); print $nf}'`
  seq1energyensemble=`grep $rfam1 ${data}/rfam_pairwise_threesomes.energyensemble | cut -d" " -f2`
  seq2energyensemble=`grep $rfam2 ${data}/rfam_pairwise_threesomes.energyensemble | cut -d" " -f2`
  echo "sci" | awk -v econs=$alienergyensemble -v eseq1=$seq1energyensemble -v eseq2=$seq2energyensemble '{ printf("%5.3f\t%5.3f\t%5.3f\t%6.5f\n", econs, eseq1, eseq2, (2 * econs / ( eseq1 + eseq2 ))) }' >> tmp.sci.txt
done
paste <(gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz) tmp.sci.txt | awk '{print $1","$5}' | gzip > tmp.dotaligner4tuning.csv.gz
mv tmp.dotaligner4tuning.csv.gz ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz

#calculate mcc of rfam consensus structure to rnaalifold structure
rm -f tmp.mcc.txt
gunzip -c ${ptdotaligner}/output/dotaligner4tuning.out.csv.gz | sed 's/\.pp//g' | while read line; do
  rfam1=${line%%,*};
  temp=${line#*,};
  rfam2=${temp%%,*};
  #removebpinalignment.pl ref_${rfam1}__${rfam2}.fa | awk 'begin{ors=""}{if(nr==1 || nr==5){ sub(/^>/,"");print $1"\t" }else{ if(nr==2 || nr==6 ){ gsub(/\./,"-");print $1"\t" }else{ if(nr==4 || nr==8){ print $1"\n" } } }}' > ref.ccinput
  awk 'begin{ors=""}{if(nr==1 || nr==5){ sub(/^>/,"");print $1"\t" }else{ if(nr==2 || nr==6 ){ gsub(/\./,"-");print $1"\t" }else{ if(nr==4 || nr==8){ print $1"\n" } } }}' ref_${rfam1}__${rfam2}.fa > ref.ccinput
  echo $line | awk -f "," '{gsub("-",".",$14);gsub("-",".",$15);print ">"$1"\n"$14"\n>"$2"\n"$15}' | fa2aln.pl - > test_aln.aln
  testcons=`rnaalifold -p2 -r < test_aln.aln 2> /dev/null | sed -n 2p | cut -d" " -f1` 
  #tail -3 test_aln.aln | head -2 | awk -v cons=$testcons 'begin{ofs="\t"}{print $1,$2,cons}' | awk 'begin{ofs="\n"}{print ">"$1,$2,">structure",$3}' | removebpinalignment.pl - | awk 'begin{ors=""}{if(nr==1 || nr==5){ sub(/^>/,"");print $1"\t" }else{ if(nr==2 || nr==6 ){ gsub(/\./,"-");print $1"\t"}else{ if(nr==4 || nr==8){ print $1"\n" } } }}' > test.ccinput
  tail -3 test_aln.aln | head -2 | awk -v cons=$testcons 'begin{ofs="\t"}{print $1,$2,cons}' > test.ccinput
  structurecc -f=test.ccinput ref.ccinput | awk 'begin{s=0}{s=s+$8}end{if(nr==0){print "0"}else{cc=s/nr;if(cc<0){cc=0};print cc}}' >> tmp.mcc.txt
done
paste <(gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz) tmp.mcc.txt | awk '{print $1","$2}' | gzip > tmp.dotaligner4tuning.csv.gz
mv tmp.dotaligner4tuning.csv.gz ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz

#analyze data
#K A B R T L S M SEQALN
gunzip -c ${PTDOTALIGNER}/output/dotaligner4tuning.out.csv.gz | awk '{gsub(/,/,"\t");print $0}' | sort -k18gr | less
gunzip -c output/dotaligner4tuning.out.csv.gz | awk '{gsub(/,/,"\t");print $0}' > dotaligner4tuning.out.tab
uniqCol1concatCol2.pl dotaligner4tuning.out.tab 4,5,6,7,8,9,10,11,12 17 > dotaligner4tuning.concat_sps
uniqCol1concatCol2.pl dotaligner4tuning.out.tab 4,5,6,7,8,9,10,11,12 16 > dotaligner4tuning.concat_time
uniqCol1concatCol2.pl dotaligner4tuning.out.tab 4,5,6,7,8,9,10,11,12 18 > dotaligner4tuning.concat_sci
uniqCol1concatCol2.pl dotaligner4tuning.out.tab 4,5,6,7,8,9,10,11,12 19 > dotaligner4tuning.concat_mcc
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning.concat_sci | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | sort > tmp.mean_sci
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning.concat_mcc | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | sort > tmp.mean_mcc
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning.concat_sps | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | sort > tmp.mean_sps
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning.concat_time | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | sort > tmp.mean_time
paste tmp.mean_sps tmp.mean_time tmp.mean_sci tmp.mean_mcc | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$20,$30,$40}' > dotaligner4tuning.concat_sps_time_sci_mcc
sort -k10gr dotaligner4tuning.concat_sps_time_sci_mcc | head
#PSI<=50, PSI>50
gunzip -c dotaligner4tuning.out.csv.gz | awk '{gsub(/,/,"\t");print $0}' | awk '$3<=50' > dotaligner4tuning_le50.out.tab
gunzip -c dotaligner4tuning.out.csv.gz | awk '{gsub(/,/,"\t");print $0}' | awk '$3>50' > dotaligner4tuning_g50.out.tab
PSI="le50"
#PSI="g50"
uniqCol1concatCol2.pl dotaligner4tuning_${PSI}.out.tab 4,5,6,7,8,9,10,11,12 17 > dotaligner4tuning_${PSI}.concat_sps
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning_${PSI}.concat_sci | sort -k11gr | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | head
awk '{split($10,a,",");l=length(a);s=0;for(i=1;i<=l;i++){s+=a[i]};print $0,(s/l)}' dotaligner4tuning_${PSI}.concat_sps | sort -k11gr | awk 'BEGIN{OFS="\t"}{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$11}' | awk '$1==0.3 && $2==-0.2 && $3==0 && $4==0 && $5==0.25 && $6==0 && $7==0 && $8==25 && $9=="FALSE"'
#0.3     -0.2    0       0       0.25    0       0       25      FALSE   0.687172        16.592
#0.3     -0.2    0       0       0.25    0       0       15      FALSE   0.672142        10.3302 ***
#0.3     -0.2    0       0       0.25    0       FALSE   15      TRUE    0.662123        10.26 ***
#PSI<=50
#0.3	-0.2	0	0	0.25	0	0	25	FALSE	0.482146
#PSI>50
#0.3	-0.2	0	0	0.25	0	0	25	FALSE	0.789686
#
#
#0.5     -0.2    0       5       0.25    0.5     0       25      FALSE   0.672758        16.6618
#0.5     -0.2    0       5       0.25    0.5     15      25      FALSE   0.672329        19.556
#0.5     -0.2    0       5       0.25    0.5     0       15      FALSE   0.662917        10.3457
#0.5     -0.2    0       10      0.25    0.5     15      15      FALSE   0.662642        13.5167
#PSI<=50
#0.5     -0.2    0       5       0.25    0.5     0       25      FALSE   0.447114
#0.5     -0.2    0       0       0.25    0.5     0       25      FALSE   0.446739
#0.5     -0.2    0       0       0.25    0.5     15      15      FALSE   0.423004
#0.5     -0.2    0       10      0.25    0.5     15      15      FALSE   0.423004
#0.5     -0.2    0       5       0.25    0.5     15      15      FALSE   0.423004
#
#PSI>50
#0.5     -0.2    0       5       0.25    0.5     15      25      FALSE   0.793983
#0.5     -0.2    0       5       0.25    0.5     FALSE   25      TRUE    0.793983
#0.5     -0.2    0       5       0.25    0.5     0       15      FALSE   0.784251
#0.5     -0.2    0       5       0.25    0.5     FALSE   15      TRUE    0.784251

#sort -k10gr dotaligner4tuning.concat_sps_time_sci_mcc | head
#0.3	-0.2	0	0	0.25	0	0	25	FALSE	0.687172	16.592	1.93691	0.25444
#0.3	-0.2	0	0	0.5	0	0	25	FALSE	0.687172	16.4734	1.93691	0.25444
#0.3	-0.2	0	0	0.25	0	FALSE	25	TRUE	0.686332	16.4993	1.92614	0.269107
#0.3	-0.2	0	0	0.5	0	FALSE	25	TRUE	0.686332	16.3661	1.92614	0.269107
#0.1	-0.1	0	0	0.25	0	FALSE	25	TRUE	0.684302	16.6801	1.95606	0.332393
#0.1	-0.1	0	0	0.5	0	FALSE	25	TRUE	0.684302	16.5543	1.95606	0.332393
#0.1	-0.1	0	0	0.25	0	0	25	FALSE	0.67613	16.6568	1.94184	0.305321
#0.1	-0.1	0	0	0.5	0	0	25	FALSE	0.67613	16.5099	1.94184	0.305321
#0.1	-0.05	0	0	0.25	0	0	25	FALSE	0.675488	16.6007	1.95211	0.280655
#0.1	-0.05	0	0	0.5	0	0	25	FALSE	0.675488	16.4833	1.95211	0.280655
#sort -k13gr dotaligner4tuning.concat_sps_time_sci_mcc | head
#0.1	-0.1	0	0	0.25	0	FALSE	25	TRUE	0.684302	16.6801	1.95606	0.332393
#0.1	-0.1	0	0	0.5	0	FALSE	25	TRUE	0.684302	16.5543	1.95606	0.332393
#0.3	-0.05	-0.05	5	0.5	0.5	0	25	FALSE	0.645703	16.6899	1.98793	0.325702
#0.3	-0.05	-0.05	5	0.5	0.5	15	25	FALSE	0.645703	19.4695	1.96263	0.325702
#0.3	-0.05	-0.05	5	0.5	0.5	15	15	FALSE	0.64264	13.513	1.95442	0.325214
#0.3	-0.05	-0.05	5	0.5	0.5	0	15	FALSE	0.640134	10.4175	1.97004	0.322643 ***
#0.1	-0.1	0	0	0.25	0	15	15	FALSE	0.650531	13.2682	1.91732	0.322119
#0.1	-0.1	0	0	0.5	0	15	15	FALSE	0.650531	13.2506	1.91732	0.322119
#0.3	0	-0.05	5	0.5	0.5	0	25	FALSE	0.647105	16.4256	2.03606	0.319857
#0.3	0	-0.05	5	0.5	0.5	15	25	FALSE	0.647105	19.3596	2.01135	0.319857
#sort -k12gr dotaligner4tuning.concat_sps_time_sci_mcc | head
#0.5	-0.05	-0.05	5	0.5	0.5	0	25	FALSE	0.64392	16.9118	2.10012	0.161429
#0.3	0	-0.1	0	0.25	0.5	15	25	FALSE	0.647428	19.6368	2.09826	0.316083
#0.3	0	0	0	0.25	0.5	15	25	FALSE	0.641261	19.0361	2.09728	0.21981
#0.3	0	0	0	0.5	0.5	15	25	FALSE	0.641261	19.0243	2.09728	0.21981
#0.3	0	-0.1	0	0.25	0.5	0	25	FALSE	0.649333	16.7449	2.09721	0.316083
#0.5	-0.05	-0.05	10	0.5	0.5	0	25	FALSE	0.644264	16.8151	2.09704	0.159357
#0.5	-0.05	-0.05	5	0.25	0.5	0	25	FALSE	0.644105	16.8834	2.09666	0.163083
#0.3	0	0	0	0.25	0.5	0	25	FALSE	0.641261	16.1819	2.09648	0.222679
#0.3	0	0	0	0.5	0.5	0	25	FALSE	0.641261	16.1224	2.09648	0.222679
#0.5	-0.05	-0.05	10	0.25	0.5	0	25	FALSE	0.643783	16.9631	2.09633	0.159


#draw some beautiful graphs

